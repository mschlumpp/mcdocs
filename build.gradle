buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:0.10.195'
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

apply plugin: 'kotlin'
apply plugin: 'forge'
apply plugin: 'idea'

version = "1.0"
group = "de.theunknownxy.mcdocs" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "mcdocs"

minecraft {
    version = "1.7.10-10.13.2.1291"
    runDir = "eclipse"
    // Shade kotlin packages
    srgExtra "PK: kotlin de/theunknownxy/mcdocs/kotlin"
    srgExtra "PK: jet de/theunknownxy/mcdocs/jet"
    srgExtra "PK: org/jetbrains de/theunknownxy/mcdocs/org/jetbrains"
}

dependencies {
    shade 'org.jetbrains.kotlin:kotlin-stdlib:0.10.195'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}

idea {
    module {
        outputDir = file('build/classes/main')
    }
}